CREATE SCHEMA d_roles;
-- Create the database tables

-- Organizations table
CREATE TABLE  IF NOT EXISTS d_roles.organisations (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    siren CHAR(9) NOT NULL CHECK (siren ~ '^[0-9]{9}$'),
    name VARCHAR(255) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Teams table
CREATE TABLE  IF NOT EXISTS d_roles.teams (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    orga_id INTEGER NOT NULL,
    name VARCHAR(255) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_team_orga FOREIGN KEY (orga_id) REFERENCES d_roles.organisations (id) ON DELETE CASCADE,
);

-- Parent-Child relationship table
CREATE TABLE IF NOT EXISTS d_roles.parent_child_relations (
    parent_team_id INTEGER NOT NULL,
    child_team_id INTEGER NOT NULL,
    inherit_scopes BOOLEAN NOT NULL DEFAULT false,
    PRIMARY KEY (parent_team_id, child_team_id),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_parent_child_parent FOREIGN KEY (parent_team_id) REFERENCES d_roles.team (id) ON DELETE CASCADE,
    CONSTRAINT fk_parent_child_child FOREIGN KEY (child_team_id) REFERENCES d_roles.team (id) ON DELETE CASCADE
);

-- Users table
CREATE TABLE IF NOT EXISTS d_roles.users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    sub_pro_connect VARCHAR(255),
    is_email_confirmed BOOLEAN NOT NULL DEFAULT false,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
);

-- Roles table
CREATE TABLE IF NOT EXISTS d_roles.roles (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name VARCHAR(255) NOT NULL UNIQUE,
    is_admin BOOLEAN NOT NULL DEFAULT false,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Team users
CREATE TABLE IF NOT EXISTS d_roles.team_user_relations (
    team_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    role_id INTEGER NOT NULL,
    PRIMARY KEY (team_id, user_id, role_id),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT team_user_fk_relation_team FOREIGN KEY (team_id) REFERENCES d_roles.team (id) ON DELETE CASCADE,
    CONSTRAINT team_user_fk_relation_user FOREIGN KEY (user_id) REFERENCES d_roles.users (id) ON DELETE CASCADE,
    CONSTRAINT team_user_fk_relation_role FOREIGN KEY (role_id) REFERENCES d_roles.roles (id) ON DELETE CASCADE
);

-- Service Providers table
CREATE TABLE  IF NOT EXISTS d_roles.service_providers (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Scopes table
CREATE TABLE  IF NOT EXISTS d_roles.team_service_provider_relations (
    service_provider_id INTEGER NOT NULL,
    team_id INTEGER NOT NULL,
    PRIMARY KEY (service_provider_id, team_id),
    scopes TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_scopes_team FOREIGN KEY (team_id) REFERENCES d_roles.team (id) ON DELETE CASCADE,
    CONSTRAINT fk_scopes_project FOREIGN KEY (service_provider_id) REFERENCES d_roles.service_provider (id) ON DELETE CASCADE
);

-- Service account to service provider relationship
CREATE TABLE  IF NOT EXISTS d_roles.sa_sp_relations (
    sa_id INTEGER NOT NULL,
    sp_id INTEGER NOT NULL,
    PRIMARY KEY (sa_id, sp_id),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_sa_sp_account FOREIGN KEY (sa_id) REFERENCES d_roles.service_account (id) ON DELETE CASCADE,
    CONSTRAINT fk_sa_sp_project FOREIGN KEY (sp_id) REFERENCES d_roles.service_provider (id) ON DELETE CASCADE
);

-- Service Account table
CREATE TABLE  IF NOT EXISTS d_roles.service_accounts (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    token TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
