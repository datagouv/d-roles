name: Run Integration Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.7
        env:
          POSTGRES_DB: d-roles-test
          POSTGRES_USER: d-roles
          POSTGRES_PASSWORD: d-roles
          POSTGRES_SCHEMA: d_roles
        ports:
          - 5432:5432
        # Health check to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e .

      - name: Create .env file
        run: |
          cat > .env << EOL
          DB_NAME=d-roles-test
          DB_USER=d-roles
          DB_PASSWORD=d-roles
          DB_SCHEMA=d_roles
          EOL

      - name: Run database schema migrations
        run: |
          POSTGRES_PASSWORD='d-roles' POSTGRES_HOST='postgres' POSTGRES_PORT='5432' POSTGRES_USER='d-roles' POSTGRES_DB='d-roles' POSTGRES_SCHEMA='d_roles' sh ./db/entrypoint.sh

      - name: Run tests
        env:
          # Use port 5433 as specified in your docker-compose
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5433
          POSTGRES_DB: d-roles-test
          POSTGRES_USER: d-roles
          POSTGRES_PASSWORD: d-roles
          POSTGRES_SCHEMA: d_roles
        run: |
          make test

      - name: Clean up
        if: always()
        run: |
          docker-compose down
